@page "/dashboard"
@using PlantPal.Shared.Models
@inject PlantPal.Web.Services.ApiService ApiService

<PageTitle>Dashboard - PlantPal</PageTitle>

<div class="container mx-auto px-4 py-8">
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-plant-green-600 mb-2">Your Garden Dashboard</h1>
        <p class="text-gray-600">Track your eco-score, badges, and gardening progress</p>
    </div>

    <!-- Stats Overview -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow-md p-6 text-center">
            <div class="text-3xl font-bold text-plant-green-600 mb-2">@ecoScore</div>
            <div class="text-sm text-gray-600">Eco Score</div>
            <div class="text-xs text-gray-500 mt-1">🌱 Keep growing!</div>
        </div>
        
        <div class="bg-white rounded-lg shadow-md p-6 text-center">
            <div class="text-3xl font-bold text-blue-600 mb-2">@userBadges.Count</div>
            <div class="text-sm text-gray-600">Badges Earned</div>
            <div class="text-xs text-gray-500 mt-1">🏆 Great progress!</div>
        </div>
        
        <div class="bg-white rounded-lg shadow-md p-6 text-center">
            <div class="text-3xl font-bold text-green-600 mb-2">12</div>
            <div class="text-sm text-gray-600">Plants Growing</div>
            <div class="text-xs text-gray-500 mt-1">🌿 Thriving garden!</div>
        </div>
        
        <div class="bg-white rounded-lg shadow-md p-6 text-center">
            <div class="text-3xl font-bold text-purple-600 mb-2">8</div>
            <div class="text-sm text-gray-600">Native Species</div>
            <div class="text-xs text-gray-500 mt-1">🦋 Eco-friendly!</div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Badges Section -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Your Badges</h2>
            
            @if (isLoadingBadges)
            {
                <div class="text-center py-8">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-plant-green-600 mx-auto mb-2"></div>
                    <p class="text-gray-500 text-sm">Loading badges...</p>
                </div>
            }
            else if (userBadges.Any())
            {
                <div class="grid grid-cols-2 gap-4 mb-4">
                    @foreach (var badge in userBadges.Take(4))
                    {
                        <div class="text-center p-4 bg-gray-50 rounded-lg">
                            <div class="text-3xl mb-2">@(badge.IconUrl ?? "🏆")</div>
                            <div class="font-semibold text-sm text-gray-800">@badge.Name</div>
                            <div class="text-xs text-gray-600 mt-1">@badge.Description</div>
                        </div>
                    }
                </div>
                
                @if (userBadges.Count > 4)
                {
                    <div class="text-center">
                        <button class="text-plant-green-600 hover:text-plant-green-700 text-sm font-medium">
                            View All @userBadges.Count Badges
                        </button>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-8">
                    <div class="text-4xl mb-3">🏆</div>
                    <p class="text-gray-600 mb-4">No badges earned yet</p>
                    <p class="text-sm text-gray-500">Start gardening to earn your first badge!</p>
                </div>
            }
        </div>

        <!-- Available Badges -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Available Badges</h2>
            
            @if (isLoadingAllBadges)
            {
                <div class="text-center py-8">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-plant-green-600 mx-auto mb-2"></div>
                    <p class="text-gray-500 text-sm">Loading available badges...</p>
                </div>
            }
            else if (availableBadges.Any())
            {
                <div class="space-y-3">
                    @foreach (var badge in availableBadges.Take(5))
                    {
                        var isEarned = userBadges.Any(ub => ub.Id == badge.Id);
                        <div class="flex items-center p-3 bg-gray-50 rounded-lg @(isEarned ? "opacity-50" : "")">
                            <div class="text-2xl mr-3">@(badge.IconUrl ?? "🏆")</div>
                            <div class="flex-1">
                                <div class="font-semibold text-sm text-gray-800">@badge.Name</div>
                                <div class="text-xs text-gray-600">@badge.Description</div>
                                <div class="text-xs text-plant-green-600 mt-1">+@badge.EcoScoreReward eco points</div>
                            </div>
                            @if (isEarned)
                            {
                                <div class="text-plant-green-600 text-sm font-medium">✓ Earned</div>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-8">
                    <p class="text-gray-600">No badges available</p>
                </div>
            }
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="mt-8 bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Recent Activity</h2>
        <div class="space-y-3">
            <div class="flex items-center p-3 bg-green-50 rounded-lg">
                <div class="text-2xl mr-3">🌱</div>
                <div class="flex-1">
                    <div class="font-medium text-gray-800">Planted Purple Coneflower</div>
                    <div class="text-sm text-gray-600">Added a native plant to your garden</div>
                </div>
                <div class="text-sm text-gray-500">2 days ago</div>
            </div>
            
            <div class="flex items-center p-3 bg-blue-50 rounded-lg">
                <div class="text-2xl mr-3">🏆</div>
                <div class="flex-1">
                    <div class="font-medium text-gray-800">Earned "Green Thumb" Badge</div>
                    <div class="text-sm text-gray-600">Planted your first plant</div>
                </div>
                <div class="text-sm text-gray-500">3 days ago</div>
            </div>
            
            <div class="flex items-center p-3 bg-purple-50 rounded-lg">
                <div class="text-2xl mr-3">📝</div>
                <div class="flex-1">
                    <div class="font-medium text-gray-800">Shared Garden Progress</div>
                    <div class="text-sm text-gray-600">Posted in the community</div>
                </div>
                <div class="text-sm text-gray-500">1 week ago</div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="mt-8 bg-plant-green-50 rounded-lg p-6">
        <h2 class="text-xl font-semibold text-plant-green-800 mb-4">Quick Actions</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <a href="/recommendations" class="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow">
                <div class="text-2xl mr-3">🔍</div>
                <div>
                    <div class="font-medium text-gray-800">Get Plant Recommendations</div>
                    <div class="text-sm text-gray-600">Find perfect plants for your garden</div>
                </div>
            </a>
            
            <a href="/community" class="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow">
                <div class="text-2xl mr-3">👥</div>
                <div>
                    <div class="font-medium text-gray-800">Join Community</div>
                    <div class="text-sm text-gray-600">Share and learn from others</div>
                </div>
            </a>
            
            <a href="/plants" class="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow">
                <div class="text-2xl mr-3">📚</div>
                <div>
                    <div class="font-medium text-gray-800">Browse Plant Database</div>
                    <div class="text-sm text-gray-600">Explore our plant collection</div>
                </div>
            </a>
        </div>
    </div>
</div>

@code {
    private List<Badge> userBadges = new();
    private List<Badge> availableBadges = new();
    private int ecoScore = 0;
    private bool isLoadingBadges = true;
    private bool isLoadingAllBadges = true;
    
    // Mock user ID - in a real app, this would come from authentication
    private readonly Guid mockUserId = Guid.Parse("12345678-1234-1234-1234-123456789012");

    protected override async Task OnInitializedAsync()
    {
        await Task.WhenAll(
            LoadUserBadges(),
            LoadAllBadges(),
            LoadEcoScore()
        );
    }

    private async Task LoadUserBadges()
    {
        try
        {
            isLoadingBadges = true;
            userBadges = await ApiService.GetUserBadgesAsync(mockUserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user badges: {ex.Message}");
        }
        finally
        {
            isLoadingBadges = false;
        }
    }

    private async Task LoadAllBadges()
    {
        try
        {
            isLoadingAllBadges = true;
            availableBadges = await ApiService.GetAllBadgesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading all badges: {ex.Message}");
        }
        finally
        {
            isLoadingAllBadges = false;
        }
    }

    private async Task LoadEcoScore()
    {
        try
        {
            ecoScore = await ApiService.GetEcoScoreAsync(mockUserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading eco score: {ex.Message}");
            ecoScore = 150; // Mock score for demo
        }
    }
}