@page "/community"
@using PlantPal.Shared.Models
@inject PlantPal.Web.Services.ApiService ApiService

<PageTitle>Community Garden - PlantPal</PageTitle>

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-3xl font-bold text-plant-green-600">Community Garden</h1>
            <p class="text-gray-600 mt-2">Share your gardening experiences and learn from fellow gardeners</p>
        </div>
        <button @onclick="ShowCreatePostModal" class="bg-plant-green-600 text-white px-6 py-3 rounded-lg hover:bg-plant-green-700 transition-colors font-semibold">
            üìù Share Your Experience
        </button>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Main Content -->
        <div class="lg:col-span-2">
            @if (isLoading)
            {
                <div class="text-center py-12">
                    <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-plant-green-600 mx-auto mb-4"></div>
                    <p class="text-gray-600">Loading community posts...</p>
                </div>
            }
            else if (communityPosts.Any())
            {
                <div class="space-y-6">
                    @foreach (var post in communityPosts)
                    {
                        <article class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                            <div class="flex items-center mb-4">
                                <div class="w-10 h-10 bg-plant-green-500 rounded-full flex items-center justify-center text-white font-semibold">
                                    @(post.User?.Username?.FirstOrDefault().ToString().ToUpper() ?? "U")
                                </div>
                                <div class="ml-3">
                                    <h3 class="font-semibold text-gray-800">@(post.User?.Username ?? "Anonymous")</h3>
                                    <p class="text-sm text-gray-500">@post.CreatedAt.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>
                            
                            <h2 class="text-xl font-semibold text-gray-800 mb-3">@post.Title</h2>
                            <div class="prose prose-sm max-w-none text-gray-700 mb-4">
                                @post.Content
                            </div>
                            
                            @if (!string.IsNullOrEmpty(post.Tags))
                            {
                                <div class="flex flex-wrap gap-2 mb-4">
                                    @foreach (var tag in post.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <span class="bg-plant-green-100 text-plant-green-800 text-xs px-2 py-1 rounded-full">
                                            #@tag.Trim()
                                        </span>
                                    }
                                </div>
                            }
                            
                            <div class="flex items-center justify-between pt-4 border-t border-gray-200">
                                <button @onclick="() => LikePost(post.Id)" class="flex items-center space-x-2 text-gray-600 hover:text-plant-green-600 transition-colors">
                                    <span>‚ù§Ô∏è</span>
                                    <span>@post.Likes</span>
                                </button>
                                <div class="flex space-x-4 text-sm text-gray-500">
                                    <button class="hover:text-plant-green-600 transition-colors">Reply</button>
                                    <button class="hover:text-plant-green-600 transition-colors">Share</button>
                                </div>
                            </div>
                        </article>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-12">
                    <div class="text-6xl mb-4">üå±</div>
                    <h3 class="text-xl font-semibold text-gray-800 mb-2">No posts yet</h3>
                    <p class="text-gray-600 mb-6">Be the first to share your gardening experience with the community!</p>
                    <button @onclick="ShowCreatePostModal" class="bg-plant-green-600 text-white px-6 py-3 rounded-lg hover:bg-plant-green-700 transition-colors">
                        Create First Post
                    </button>
                </div>
            }
        </div>
        
        <!-- Sidebar -->
        <div class="lg:col-span-1">
            <div class="space-y-6">
                <!-- Community Stats -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800">Community Stats</h3>
                    <div class="space-y-3">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Total Posts</span>
                            <span class="font-semibold text-plant-green-600">@communityPosts.Count</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Active Gardeners</span>
                            <span class="font-semibold text-plant-green-600">@communityPosts.Select(p => p.UserId).Distinct().Count()</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Total Likes</span>
                            <span class="font-semibold text-plant-green-600">@communityPosts.Sum(p => p.Likes)</span>
                        </div>
                    </div>
                </div>
                
                <!-- Popular Tags -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800">Popular Tags</h3>
                    <div class="flex flex-wrap gap-2">
                        <span class="bg-plant-green-100 text-plant-green-800 text-sm px-3 py-1 rounded-full">#native-plants</span>
                        <span class="bg-plant-green-100 text-plant-green-800 text-sm px-3 py-1 rounded-full">#gardening-tips</span>
                        <span class="bg-plant-green-100 text-plant-green-800 text-sm px-3 py-1 rounded-full">#sustainability</span>
                        <span class="bg-plant-green-100 text-plant-green-800 text-sm px-3 py-1 rounded-full">#beginners</span>
                        <span class="bg-plant-green-100 text-plant-green-800 text-sm px-3 py-1 rounded-full">#herbs</span>
                    </div>
                </div>
                
                <!-- Quick Tips -->
                <div class="bg-plant-green-50 rounded-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 text-plant-green-800">üí° Quick Tips</h3>
                    <ul class="space-y-2 text-sm text-plant-green-700">
                        <li>‚Ä¢ Share photos of your garden progress</li>
                        <li>‚Ä¢ Ask questions about plant care</li>
                        <li>‚Ä¢ Tag your posts for better discovery</li>
                        <li>‚Ä¢ Help fellow gardeners with advice</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Post Modal -->
@if (showCreateModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
        <div class="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold text-gray-800">Share Your Gardening Experience</h2>
                    <button @onclick="HideCreatePostModal" class="text-gray-500 hover:text-gray-700">
                        <span class="text-2xl">&times;</span>
                    </button>
                </div>
                
                <EditForm Model="@newPost" OnValidSubmit="@CreatePost">
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Title</label>
                            <InputText @bind-Value="newPost.Title" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-plant-green-500 focus:border-plant-green-500" placeholder="What's your post about?" />
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Content</label>
                            <InputTextArea @bind-Value="newPost.Content" rows="6" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-plant-green-500 focus:border-plant-green-500" placeholder="Share your experience, tips, or ask questions..." />
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Tags (comma-separated)</label>
                            <InputText @bind-Value="newPost.Tags" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-plant-green-500 focus:border-plant-green-500" placeholder="native-plants, gardening-tips, beginners" />
                        </div>
                        
                        <div class="flex justify-end space-x-3 pt-4">
                            <button type="button" @onclick="HideCreatePostModal" class="px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors">
                                Cancel
                            </button>
                            <button type="submit" class="bg-plant-green-600 text-white px-6 py-2 rounded-lg hover:bg-plant-green-700 transition-colors" disabled="@isCreatingPost">
                                @if (isCreatingPost)
                                {
                                    <span>Publishing...</span>
                                }
                                else
                                {
                                    <span>Publish Post</span>
                                }
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    private List<CommunityPost> communityPosts = new();
    private bool isLoading = true;
    private bool showCreateModal = false;
    private bool isCreatingPost = false;
    private CommunityPost newPost = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        try
        {
            isLoading = true;
            communityPosts = await ApiService.GetRecentPostsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading posts: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowCreatePostModal()
    {
        newPost = new CommunityPost
        {
            UserId = Guid.NewGuid() // In a real app, this would be the current user's ID
        };
        showCreateModal = true;
    }

    private void HideCreatePostModal()
    {
        showCreateModal = false;
        newPost = new CommunityPost();
    }

    private async Task CreatePost()
    {
        if (string.IsNullOrWhiteSpace(newPost.Title) || string.IsNullOrWhiteSpace(newPost.Content))
            return;

        try
        {
            isCreatingPost = true;
            var createdPost = await ApiService.CreatePostAsync(newPost);
            communityPosts.Insert(0, createdPost);
            HideCreatePostModal();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating post: {ex.Message}");
        }
        finally
        {
            isCreatingPost = false;
        }
    }

    private async Task LikePost(Guid postId)
    {
        try
        {
            await ApiService.LikePostAsync(postId);
            var post = communityPosts.FirstOrDefault(p => p.Id == postId);
            if (post != null)
            {
                post.Likes++;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error liking post: {ex.Message}");
        }
    }
}